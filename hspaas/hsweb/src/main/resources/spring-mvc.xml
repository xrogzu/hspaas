<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:application.properties" />

	<!-- dubbo 消费者 -->
	<import resource="spring-dubbo-consumer.xml" />

	<context:component-scan base-package="com.huashi.web.controller"></context:component-scan>
	
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="configLocation" value="classpath:freemarker.properties" />
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value="fmXmlEscape" />
			</map>
		</property>
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="true" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="1" />
		<!-- 此变量值为pageContext.request, 页面使用方法：rc.contextPath -->
		<property name="requestContextAttribute" value="rc" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<!-- 采用注解方式配置MVC -->
	<mvc:annotation-driven validator="validator"
		content-negotiation-manager="contentNegotiationManager">

		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg name="defaultCharset" value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 静态资源 -->
	<mvc:resources mapping="/images/**" location="/assets/images/" cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/assets/js/" cache-period="31556926" />
	<mvc:resources mapping="/css/**" location="/assets/css/" cache-period="31556926" />
		
	<!-- Maps '/' requests to the 'index' view -->
	<mvc:view-controller path="/" view-name="/index" />
	<mvc:view-controller path="/500" view-name="/error/error" />
	<mvc:view-controller path="/404" view-name="/error/error" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login/**" />
			<mvc:exclude-mapping path="/register/**" />
			<mvc:exclude-mapping path="/verify_code/**" />
			<mvc:exclude-mapping path="/pay_result/**" />
			<mvc:exclude-mapping path="/api/**" />
			<bean class="com.huashi.web.filter.AuthenticationInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- AOP切面日志管理 -->
    <!---->
<!--     <bean id="controllerMethodInvokeAspect" class="com.huashi.web.filter.ControllerMethodInvokeLogPrint"></bean>
    <aop:aspectj-autoproxy  proxy-target-class="true">
        <aop:include name="controllerMethodInvokeAspect"/>
        <aop:include name="responseFormatAop"/>
    </aop:aspectj-autoproxy> -->

	<mvc:default-servlet-handler />

	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy />

</beans>