<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huashi.sms.record.dao.SmsMtMessagePushMapper">
	<resultMap id="BaseResultMap" type="com.huashi.sms.record.domain.SmsMtMessagePush">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="msg_id" property="msgId" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="retry_times" property="retryTimes" jdbcType="INTEGER" />
		<result column="response_milliseconds" property="responseMilliseconds"
			jdbcType="BIGINT" />
		<result column="response_content" property="responseContent"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, msg_id, mobile, content, status, retry_times,
		response_milliseconds,
		response_content,
		create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sms_mt_message_push
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		sms_mt_message_push
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.huashi.sms.record.domain.SmsMtMessagePush">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into sms_mt_message_push (msg_id, mobile, content,
		status,
		retry_times, response_milliseconds,
		response_content, create_time)
		values (#{msgId,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{retryTimes,jdbcType=INTEGER},
		#{responseMilliseconds,jdbcType=BIGINT},
		#{responseContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.huashi.sms.record.domain.SmsMtMessagePush">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into sms_mt_message_push
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="msgId != null">
				msg_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="retryTimes != null">
				retry_times,
			</if>
			<if test="responseMilliseconds != null">
				response_milliseconds,
			</if>
			<if test="responseContent != null">
				response_content,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="msgId != null">
				#{msgId,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="retryTimes != null">
				#{retryTimes,jdbcType=INTEGER},
			</if>
			<if test="responseMilliseconds != null">
				#{responseMilliseconds,jdbcType=BIGINT},
			</if>
			<if test="responseContent != null">
				#{responseContent,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huashi.sms.record.domain.SmsMtMessagePush">
		update sms_mt_message_push
		<set>
			<if test="msgId != null">
				msg_id = #{msgId,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="retryTimes != null">
				retry_times = #{retryTimes,jdbcType=INTEGER},
			</if>
			<if test="responseMilliseconds != null">
				response_milliseconds =
				#{responseMilliseconds,jdbcType=BIGINT},
			</if>
			<if test="responseContent != null">
				response_content = #{responseContent,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huashi.sms.record.domain.SmsMtMessagePush">
		update
		sms_mt_message_push
		set msg_id = #{msgId,jdbcType=VARCHAR},
		mobile =
		#{mobile,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		retry_times =
		#{retryTimes,jdbcType=INTEGER},
		response_milliseconds =
		#{responseMilliseconds,jdbcType=BIGINT},
		response_content =
		#{responseContent,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findByMobileAndMsgid" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sms_mt_message_push where msg_id = #{msgId} and mobile = #{mobile} 
		order by id desc limit 1
	</select>

	<insert id="batchInsert" parameterType="List">
		insert into sms_mt_message_push (msg_id, mobile, content,
		status,
		retry_times, response_milliseconds,
		response_content, create_time)
		values

		<foreach collection="list" item="message" index="index"
			separator=",">
			(#{message.msgId,jdbcType=VARCHAR}, 
			#{message.mobile,jdbcType=VARCHAR}, 
			#{message.content,jdbcType=VARCHAR},
			#{message.status,jdbcType=INTEGER}, 
			#{message.retryTimes,jdbcType=INTEGER},
			#{message.responseMilliseconds,jdbcType=BIGINT}, 
			#{message.responseContent,jdbcType=VARCHAR},
			#{message.createTime,jdbcType=TIMESTAMP})
		</foreach>
	</insert>
</mapper>