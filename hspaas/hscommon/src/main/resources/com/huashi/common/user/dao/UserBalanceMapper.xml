<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huashi.common.user.dao.UserBalanceMapper">
	<resultMap id="BaseResultMap" type="com.huashi.common.user.domain.UserBalance">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="balance" property="balance" jdbcType="DOUBLE" />
		<result column="threshold" property="threshold" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, type, balance, threshold, status, pay_type, mobile, remark, create_time, modify_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from hspaas_user_balance
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		hspaas_user_balance
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.huashi.common.user.domain.UserBalance">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into hspaas_user_balance (user_id, type, balance, threshold, status,
		pay_type, mobile,
		remark, create_time,
		modify_time)
		values (#{userId,jdbcType=INTEGER},
		#{type,jdbcType=INTEGER},
		#{balance,jdbcType=DOUBLE},
		#{threshold,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{payType,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.huashi.common.user.domain.UserBalance">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into hspaas_user_balance
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="balance != null">
				balance,
			</if>
			<if test="threshold != null">
				threshold,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="payType != null">
				pay_type,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DOUBLE},
			</if>
			<if test="threshold != null">
				#{threshold,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="payType != null">
				#{payType,jdbcType=INTEGER},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huashi.common.user.domain.UserBalance">
		update hspaas_user_balance
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=DOUBLE},
			</if>
			<if test="threshold != null">
				threshold = #{threshold,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="payType != null">
				pay_type = #{payType,jdbcType=INTEGER},
			</if>
			<if test="mobile != null">
				remark = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huashi.common.user.domain.UserBalance">
		update
		hspaas_user_balance
		set user_id = #{userId,jdbcType=INTEGER},
		type =
		#{type,jdbcType=INTEGER},
		balance = #{balance,jdbcType=DOUBLE},
		threshold = #{threshold,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		pay_type = #{payType,jdbcType=INTEGER},
		mobile = #{mobile,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from hspaas_user_balance
		where user_id = #{userId}
	</select>

	<update id="updateByUserId">
		update hspaas_user_balance
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=DOUBLE},
			</if>
			<if test="threshold != null">
				threshold = #{threshold,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="payType != null">
				pay_type = #{payType,jdbcType=INTEGER},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER} and type = #{type,jdbcType=INTEGER}
	</update>

	<select id="selectByUserIdAndType" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from hspaas_user_balance
		where user_id = #{userId} and type = #{type}
	</select>
	
	<select id="findList" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from hspaas_user_balance where 1 = 1
		<if test="userId != null and userId != 0">
			and user_id = #{userId}
		</if>
		order by id desc limit #{start},#{pageSize}
	</select>

	<select id="findCount" resultType="java.lang.Integer">
		select count(*) from hspaas_user_balance where 1 = 1
		<if test="userId != null and userId != 0">
			and user_id = #{userId}
		</if>
	</select>
	
	<update id="updateWarning" parameterType="com.huashi.common.user.domain.UserBalance">
		update hspaas_user_balance set mobile = #{mobile,jdbcType=VARCHAR}, threshold = #{threshold,jdbcType=INTEGER},
			remark = #{remark,jdbcType=VARCHAR}, modify_time = now() where id = #{id,jdbcType=INTEGER} 
	</update>
	
	<update id="updateStatus">
		update hspaas_user_balance set status = #{status}, modify_time = now() where id = #{id} 
	</update>
	
	<select id="selectAvaiableUserBalance" resultMap="BaseResultMap">
		select ub.id, ub.user_id, ub.type, ub.balance, ub.threshold, ub.status, ub.pay_type, ub.mobile
		from hspaas_user_balance ub
		join hspaas_user u on ub.user_id = u.id
		where u.status = 0 and ub.status = 0
	</select>
	
	
</mapper>