<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huashi.common.notice.dao.NotificationMessageMapper">
	<resultMap id="BaseResultMap"
		type="com.huashi.common.notice.domain.NotificationMessage">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<association property="user" column="user_id"
			javaType="com.huashi.common.user.domain.User">
			<id column="user_id" property="id" />
			<result column="name" property="name" />
			<result column="mobile" property="mobile" />
		</association>
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.huashi.common.notice.domain.NotificationMessage" extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, user_id, type, status, remark, content,create_time
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from hspaas_notification_message
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		hspaas_notification_message
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.huashi.common.notice.domain.NotificationMessage">
		insert into
		hspaas_notification_message (id, title,
		user_id,
		type, status, remark,
		create_time, content)
		values
		(#{id,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER},
		#{type,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.huashi.common.notice.domain.NotificationMessage">
		insert into hspaas_notification_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huashi.common.notice.domain.NotificationMessage">
		update hspaas_notification_message
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huashi.common.notice.domain.NotificationMessage">
		update
		hspaas_notification_message
		set title =
		#{title,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		type =
		#{type,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		remark =
		#{remark,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huashi.common.notice.domain.NotificationMessage">
		update
		hspaas_notification_message
		set title =
		#{title,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		type =
		#{type,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		remark =
		#{remark,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getCountByUserId" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		select count(*) from hspaas_notification_message where
		user_id = #{userId}
		<if test="status != null">
         and status=#{status}
      	</if>
	</select>

	<select id="findPageListByUserId" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select 
		<include refid="Base_Column_List" />
		from hspaas_notification_message where user_id
		= #{userId}
		<if test="status != null">
         and status=#{status}
      	</if>
		order by id desc
		limit #{pageRecord} offset #{startPage}
	</select>

	<select id="findCount" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		select count(hn.id) from hspaas_notification_message hn,hspaas_user hu
		where hn.user_id = hu.id
		<if test="keyword != null and keyword != ''">
			and (hu.name like '%${keyword}%' or hu.mobile like
			'%${keyword}%' or hn.title like '%${keyword}%' or hn.content like
			'%${keyword}%')
		</if>
	</select>

	<select id="findList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select hn.*,hu.name,hu.mobile from hspaas_notification_message
		hn,hspaas_user hu
		where hn.user_id = hu.id
		<if test="keyword != null and keyword != ''">
			and (hu.name like '%${keyword}%' or hu.mobile like
			'%${keyword}%' or hn.title like '%${keyword}%' or hn.content like
			'%${keyword}%')
		</if>
		order by id desc
		limit #{start},#{end}
	</select>

	<select id="findById" resultMap="ResultMapWithBLOBs">
		select hn.*,hu.name,hu.mobile
		from hspaas_notification_message hn,hspaas_user hu
		where hn.user_id =
		hu.id and hn.id = #{0}
	</select>


	<select id="findUnReadByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select <include refid="Base_Column_List" /> from hspaas_notification_message where user_id
		= #{userId} and status = 0 order by id desc
	</select>
	
	<update id="updateToRead" parameterType="java.lang.Integer">
		update hspaas_notification_message set status = 1 where user_id = #{userId,jdbcType=INTEGER} and status = 0
	</update>
	
</mapper>